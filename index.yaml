id: github.com/cloud-native-toolkit/terraform-gitops-ocp-cert-manager
name: gitops-cert-manager-jetstack
softwareProvider: jetstack
type: gitops
description: Module to populate a gitops repository with the resources to deploy the JetStack Cert Manager
tags:
  - cert manager
  - jetstack
  - gitops
versions: [{platforms: [kubernetes, ocp3, ocp4], dependencies: [{id: gitops, refs: [{source: github.com/cloud-native-toolkit/terraform-tools-gitops.git, version: ">= 1.1.0"}]}, {id: cluster, refs: [{source: github.com/ibm-garage-cloud/terraform-ibm-container-platform, version: ">= 1.7.0"}, {source: github.com/ibm-garage-cloud/terraform-ibm-ocp-vpc, version: ">= 1.0.0"}, {source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster, version: ">= 2.0.0"}]}], variables: [{name: gitops_config, moduleRef: {id: gitops, output: gitops_config}, type: "object({\n    boostrap = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    infrastructure = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    services = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n    applications = object({\n      argocd-config = object({\n        project = string\n        repo = string\n        url = string\n        path = string\n      })\n      payload = object({\n        repo = string\n        url = string\n        path = string\n      })\n    })\n  })", description: Config information regarding the gitops repo structure}, {name: git_credentials, moduleRef: {id: gitops, output: git_credentials}, type: "list(object({\n    repo = string\n    url = string\n    username = string\n    token = string\n  }))", description: The credentials for the gitops repo(s)}, {name: server_name, moduleRef: {id: gitops, output: server_name}, type: string, description: The name of the server, default: default, optional: true}, {name: cluster_type, moduleRef: {id: cluster, output: platform.type_code}, type: string, description: The cluster type (openshift or ocp3 or ocp4 or kubernetes), default: ocp4, optional: true}, {name: cluster_ingress_hostname, moduleRef: {id: cluster, output: platform.ingress}, type: string, description: Ingress hostname of the IKS cluster., default: "", optional: true}, {name: tls_secret_name, moduleRef: {id: cluster, output: platform.tls_secret}, type: string, description: The name of the secret containing the tls certificate values, default: "", optional: true}, {name: kubeseal_cert, moduleRef: {id: gitops, output: sealed_secrets_cert}, type: string, description: The certificate/public key used to encrypt the sealed secrets, default: "", optional: true}, {name: namespace, type: string, description: where to deploy cert-mgr, default: openshift-operators, optional: true}], version: v1.0.0}]
